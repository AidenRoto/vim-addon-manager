This list is incomplete. Improve it!

The reason for this file is to help users choose a system to fit their needs
faster - and to find out why so much effort was put into this topic - cause I thought VAM would satisfy almost all needs .. Obviously I was wrong. So I'd like to document it.

GLVS = GetLatestVimScript (Vim $RUNTIME files)
PAT = pathogen          (2008-08-07 -> vim.sf.net)
MANA = VIMANA           (first commit 2009-08-07)
VAM = vim-addon-manager (first commit 2009-12-27)
JOLT = jolt             (first commit 2010-08-06)
VUN = Vundle            (first commit 2010-10-18)
VSU = Vim Script Updater (2010-07-1 -> vim.sf.net)
VTS = vim-nicktears     (2010-08-19)
GVS = get vim scripts   (2011-03)

DESIGN CHOICES
=============
VAM:
  - declare script dependencies (make sharing code easier)
  - declarative (specify list of plugins you want to have installed)
  - minimal (20% effort and get 80% of value)
  - minimize code to be run at startup
  - allow activating / installing plugins without restarting Vim
    (=> VimL must be used)


PAT needs you to manually download plugins and put them inside a directory
    which pathogen will load at startup.
VUN can search http://vim-scripts.org/vim/scripts.html by name and you tell
    which names you're interested in in your .vimrc, before calling a command
    that installs them.
VAM has a repository dedicated to listing vim plugins and their dependencies,
    and is conceptually different than Vundle.

REASONS FOR STARTING THE PROJECT
================================
PAT: ? Probably because GLVS did not handle git etc ? (ask author)

VAM: VimL (see above), dependency management, minimize text users have to write
     (spceifying names only). Those features did not exist previously.



dependency management
=====================
VAM: see *-addon-info.txt files which contains a key "dependencies"
VUN: none
PAT: none

addon sources ?
===============
VAM: by plugin name. vim-addon-manager-known-repositories contains repo info.
     You can add your own sources in ~/.vimrc or by other ways easily
VUN: You can give a git url for a Bundle
PAT: You can git clone a plugin into the plugin's directory manually

Tags:
=====
VAM: runs helptags automatically
VUN: runs helptags automatically
PAT: has http://hackage.haskell.org/packages/archive/gtk/0.12.0/gtk-0.12.0.tar.gz

extra dirs hacks (load files which are not loaded when adding to runtimepath only)
===================
VAM: See if !has('vim_starting') in autoload/vam.vim
VUN: ?
PAT: I haven't seen so[urce] or ru[ntime] usage in pathogen.vim. So I guess
     this feature does not exist

VimBalls:
=========
VAM: handles them automatically
VUN: ?
PAT: need to put them in a special directory (?)

uninstallation:
===============
VAM: UninstallNotLoadedAddons
VUN: ?
PAT: delete the plugin's directory manually

